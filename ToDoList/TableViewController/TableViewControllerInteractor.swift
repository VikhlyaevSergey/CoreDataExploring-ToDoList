//
//  TableViewControllerInteractor.swift
//  ToDoList
//
//  Created by Сергей Вихляев on 03.05.2020.
//  Copyright (c) 2020 Сергей Вихляев. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol TableViewControllerBusinessLogic {
    func tableViewChangeBlockAddTask(_ task: String) -> ()->()
}

protocol TableViewControllerDataStore {
    var tasks: [String] { get set }
}

class TableViewControllerInteractor: NSObject, TableViewControllerBusinessLogic, TableViewControllerDataStore {
    weak var presenter: TableViewControllerPresentationLogic!
    var worker: TableViewControllerWorker?
    
    var tasks: [String] = []
    
    // MARK: Do something
    
    func tableViewChangeBlockAddTask(_ task: String) -> ()->() {
        return { [weak self] in
            self?.tasks.insert(task, at: 0)
        }
    }
}


extension TableViewControllerInteractor: UITableViewDataSource {
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return tasks.count
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = tableView.dequeueReusableCell(withIdentifier: TaskTableViewCell.reuseIdentifier(), for: indexPath) as! TaskTableViewCell
        
        cell.configure(task: tasks[indexPath.row])
        
        return cell
    }
}
