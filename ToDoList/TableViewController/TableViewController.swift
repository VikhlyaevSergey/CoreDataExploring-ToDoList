//
//  TableViewControllerViewController.swift
//  ToDoList
//
//  Created by Сергей Вихляев on 03.05.2020.
//  Copyright (c) 2020 Сергей Вихляев. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol TableViewControllerDisplayLogic: class {
    func showAlertWithError(_ error: Error)
}

class TableViewController: UITableViewController {
    var presenter: TableViewControllerViewControllerOutput!
    
    private var addBarButtonItem: UIBarButtonItem!
    
    // MARK: View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        setup()
    }
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        presenter?.viewIsReady()
    }
    
    // MARK: Action
    func tableViewChangesDone() {
        tableView?.beginUpdates()
        tableView?.endUpdates()
    }
}

// MARK: Setup
extension TableViewController {
    private func setup() {
        //
        self.title = "To-Do List"
        //
        
        registerXibs()
        setupBarButtons()
    }
    
    private func registerXibs() {
        let xibNames = [
            String(describing: RemoveAllTableViewCell.self),
            String(describing: TaskTableViewCell.self)
        ]
        
        xibNames.forEach { (name) in
            tableView.register(UINib(nibName: name, bundle: nil), forCellReuseIdentifier: name)
        }
    }
    
    private func setupBarButtons() {
        addBarButtonItem = UIBarButtonItem(barButtonSystemItem: .add, target: self, action: #selector(showAddNewTaskAlertController))
        addBarButtonItem.style = .done
        navigationItem.rightBarButtonItem = addBarButtonItem
    }
    
    @objc private func showAddNewTaskAlertController() {
        
        let alertController = UIAlertController(title: "New Task", message: "Please add new task", preferredStyle: .alert)
        
        let save = UIAlertAction(title: "Save", style: .default) { [weak self] (action) in
            let tf = alertController.textFields?.first
            if let newTaskTitle = tf?.text, newTaskTitle != "" {
                self?.presenter.saveTask(withTitle: newTaskTitle)
            }
        }
        
        let cancel = UIAlertAction(title: "Cancel", style: .cancel, handler: nil)
        
        alertController.addTextField(configurationHandler: nil)
        alertController.addAction(save)
        alertController.addAction(cancel)
        
        present(alertController, animated: true, completion: nil)
    }
}

extension TableViewController: TableViewControllerDisplayLogic {
    func showAlertWithError(_ error: Error) {
        var alertTitle = "Error"
        var alertMessage = ""
                
        if error is CoreDataError {
            let coreDataError = error as! CoreDataError
            alertTitle += " \(coreDataError.code)"
            alertMessage = coreDataError.message
        } else {
            alertMessage = error.localizedDescription
        }
        
        let alertController = UIAlertController(title: alertTitle, message: alertMessage, preferredStyle: .alert)
        let ok = UIAlertAction(title: "Ok", style: .default, handler: nil)
        alertController.addAction(ok)
        
        present(alertController, animated: true, completion: nil)
    }
}
